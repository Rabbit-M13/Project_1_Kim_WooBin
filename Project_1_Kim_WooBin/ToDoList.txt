1. std::vector<int> Magazine;를 이용해서 공포탄 판별하는 IsBlank()구현해서 돋보기가 인수로 받게 설정하자
(완료)2. Attack 관련 함수 재작성 필요함
(완료)=> 실탄일 때만, TakeDamage() 호출하도록 수정
(완료)=> Enemy 클래스에서 오버로드한 거 저번 테스트처럼 객체 생성했을 때
		 Actor의 Attack() 호출하는지, Enemy의 Attack() 호출하는지 확인 => Actor의 Attack() 호출함 / AEnemy*로 타입 설정하기로 결정
(완료)3. RoundManager::SetMagazine() 테스트 필요
(완료)4. Round 전체를 초기화 하는 함수 구현할지 고민 일단 TestRound 먼저 해보고 결정 => RoundManager::NextRound()로 구현
(완료)5. Round 끝나면 clear해줘야함. => RoundManager::NextRound()로 구현
(완료)6. RoundManager 망가진거 수정
(완료)7. 탄창이 모두 소진되어 현재 라운드를 초기화하는 함수 구현 => RoundManager::ResetRound()로 구현
(완료)8. IsBlank() 함수 확인
9. Store 클래스 구현
10. Items 클래스 구현 -> 아이템 별로 클래스 따로 만들어서 구현해야할지 고민.
						아이템마다 모두 기능과 성격이 다르니 그래야 할 것 같음



(+). 모든 동작에 예외처리 구현
(+). cls() => 화면 클리어 사용할 수 있으면 해보자